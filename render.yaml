services:
  - type: web
    name: optidevdoc-mcp
    env: node
    repo: https://github.com/your-org/optidevdoc-mcp.git
    buildCommand: npm ci && npm run build
    startCommand: npm start
    plan: free
    region: oregon
    branch: main
    rootDir: .
    
    envVars:
      - key: NODE_ENV
        value: production
      - key: PORT
        value: 10000
      - key: HOST
        value: 0.0.0.0
      - key: LOG_LEVEL
        value: info
      - key: DATABASE_TYPE
        value: sqlite
      - key: DATABASE_PATH
        value: ./data/optidevdoc.db
      - key: CACHE_ENABLED
        value: true
      - key: CRAWLER_ENABLED
        value: true
      - key: CRAWLER_INTERVAL_HOURS
        value: 24
      - key: CRAWLER_MAX_CONCURRENCY
        value: 3
      - key: RATE_LIMIT_MAX_REQUESTS
        value: 100
      - key: RATE_LIMIT_WINDOW_MS
        value: 60000
      - key: CORS_ENABLED
        value: true
      - key: CORS_ORIGINS
        value: "*"
        
    # Optional: Add OpenAI API key for semantic search
    # - key: OPENAI_API_KEY
    #   sync: false  # This will be added manually in Render dashboard
    
    # Health check configuration
    healthCheckPath: /health
    
    # Disk configuration for SQLite database
    disk:
      name: optidevdoc-data
      mountPath: /opt/render/project/src/data
      sizeGB: 1

  # Optional PostgreSQL database for production (upgrade from free tier)
  # - type: pserv
  #   name: optidevdoc-postgres
  #   env: postgresql
  #   plan: free
  #   databaseName: optidevdoc
  #   databaseUser: optidevdoc
  #   region: oregon

# Optional: Redis for enhanced caching (upgrade from free tier)
# - type: redis
#   name: optidevdoc-redis
#   plan: free
#   region: oregon 